<apex:page standardController="FS_Outlet_Dispenser__c" extensions="FOT_LocationFinderPageController" docType="html-5.0" lightningStylesheets="true">
     <apex:slds />
    <head>       
        <style type="text/css">
            html { height: 100% }
            body { height: 100%; margin: 0; padding: 0 }
            #map-canvas { width:100%;height:600px; }
        </style>
        <script type="text/javascript" src="https://maps.google.com/maps/api/js?key={!$Label.GeoCodeAPIKey}"></script>
        <script>
            var map;
            var dispLat;
            var dispLong;
            var NewLat;
            var NewLng;
            var geocoder;
            var infowindow = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
            var address = '{!FS_Outlet_Dispenser__c.Outlet_Street_Address__c}'+', '+'{!FS_Outlet_Dispenser__c.Outlet_City__c}'+', '+'{!FS_Outlet_Dispenser__c.Outlet_State_Province__c}'+', '+'{!FS_Outlet_Dispenser__c.Outlet_Country__c}'+', '+'{!FS_Outlet_Dispenser__c.Outlet_Zip_Code__c}';                                    
            
            function initialize() {
                geocoder = new google.maps.Geocoder();              
                loaddispenserLocation();              
                
            }
            function geocodePosition(pos,marker) {
                geocoder.geocode({
                    latLng: pos
                }, function(responses) {                    
                    if (responses && responses.length > 0) {
                        marker.formatted_address = responses[0].formatted_address;
                    } else {
                        marker.formatted_address = 'Cannot determine address at this location.';
                    }
                    infowindow.setContent(marker.formatted_address+"<br>Coordinates: "+marker.getPosition().toUrlValue(9));
                    infowindow.open(map, marker);
                });
            }
            
            function loaddispenserLocation() {
                dispLat = '{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Latitude__c}';
                dispLong = '{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Longitude__c}';              
                NewLat = dispLat;
                NewLng = dispLong;
                if(dispLat == '' || dispLat == null || dispLong == '' || dispLong == null) {
                    geocoder.geocode({'address': address}, function(results, status) {                        
                        if (status === 'OK') {                            
                            dispLat = results[0].geometry.location.lat();
                            dispLong = results[0].geometry.location.lng();
                            NewLat = dispLat;
                            NewLng = dispLong;
                            var mapOptions;
                            mapOptions = {
                                            center: new google.maps.LatLng(dispLat, dispLong),
                                            zoom: 15,
                                            mapTypeId: google.maps.MapTypeId.ROADMAP
                                        };              
                            map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                            google.maps.event.addListener(map, 'click', function() {
                              infowindow.close();
                            });
                            addMarker(dispLat, dispLong);                           
                        } else {
                            if(navigator.geolocation) {
                                navigator.geolocation.getCurrentPosition(function(position) { 
                                    dispLat = position.coords.latitude ;
                                    dispLong = position.coords.longitude;
                                    NewLat = dispLat;
                                    NewLng = dispLong;
                                    mapOptions = {
                                            center: new google.maps.LatLng(dispLat, dispLong),
                                            zoom: 15,
                                            mapTypeId: google.maps.MapTypeId.ROADMAP
                                        };              

                                    map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                                    addMarker(dispLat, dispLong);
                                }); 
                            
                            } else {
                                x.innerHTML = "Geolocation is not supported by this browser.";
                            }
                        }
                    }); 

                }
                else
                {   
                    mapOptions = {
                        center: new google.maps.LatLng(dispLat, dispLong),
                        zoom: 15,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };              

                    map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                    addMarker(dispLat, dispLong);
                    
                }
            }
            
            function addMarker(dispLat, dispLong) {
                console.log('inside addmarker method');
                console.log('lat:-' +dispLat);
                console.log('lng:-' +dispLong);
                if (marker) {
                    marker.setMap(null);
                    if (infowindow) infowindow.close();
                }
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(dispLat, dispLong),
                    map: map,
                    draggable: true,
                    animation: google.maps.Animation.DROP,
                    title: 'dispenser location'
                });
                geocodePosition(marker.getPosition(),marker);
                if (marker.formatted_address) {
                    infowindow.setContent(marker.formatted_address+"<br>coordinates: "+marker.getPosition().toUrlValue(9));
                } else  {
                    infowindow.setContent(address+"<br>coordinates: "+marker.getPosition().toUrlValue(9));
                }
                infowindow.open(map, marker);               
                //google.maps.event.addListener(marker, 'click',toggleBounce);
                google.maps.event.addListener(marker, 'click', function() {
                    if (marker.formatted_address) {
                        infowindow.setContent(marker.formatted_address+"<br>coordinates: "+marker.getPosition().toUrlValue(9));
                    } else  {
                        infowindow.setContent(address+"<br>coordinates: "+marker.getPosition().toUrlValue(9));
                    }
                    infowindow.open(map, marker);
                });
                google.maps.event.addListener(marker, 'dragend', function() {
                    NewLat = this.position.lat();
                    NewLng = this.position.lng();                   
                    geocodePosition(marker.getPosition(),marker);
                    //alert ('newlat: ' +NewLat+' '+'newlng: ' +NewLng);
                });
            }
            
            function toggleBounce() {
                if (marker.getAnimation() !== null) {
                    marker.setAnimation(null);
                } else {
                    marker.setAnimation(google.maps.Animation.BOUNCE);
                }
            }
            google.maps.event.addDomListener(window, 'load', initialize);
        
        </script>
    </head>
    <body>
        <apex:form >
            <apex:inputHidden value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Latitude__c}" id="theLat" />
            <apex:inputHidden value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Longitude__c}" id="theLon" />
            <script> 
                var theLat = document.getElementById('{!$Component.theLat}'); 
                var theLon = document.getElementById('{!$Component.theLon}');
            </script>
            <apex:pageMessages />
            <apex:pageBlock >
                <!--<apex:pageBlockButtons>
                        <apex:commandButton onclick="theLat.value=NewLat;theLon.value=NewLng;" value="Save Location Details" action="{!saveDispenserLocation}"/>
                </apex:pageBlockButtons>-->
                <apex:pageBlockSection title="Location Details">                    
                    <apex:inputField value="{!FS_Outlet_Dispenser__c.FS_isPublic__c}"/>
                    <apex:inputField value="{!FS_Outlet_Dispenser__c.FS_Apply_to_all_dispensers_in_Outlet__c}"/>
                    <apex:outputField value="{!FS_Outlet_Dispenser__c.FS_isReviewed__c}"/>
                    <apex:outputField value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Latitude__c}"/>
                    <apex:outputField value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Reviewed_On__c}"/>
                    <apex:outputField value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_Longitude__c}"/>                    
                    <apex:outputField value="{!FS_Outlet_Dispenser__c.FS_Loc_Finder_ReviewedBy__c}"/>                                       
                </apex:pageBlockSection>
                <center>
                    <apex:commandButton onclick="theLat.value=NewLat;theLon.value=NewLng;" value="Save Location Details" action="{!saveDispenserLocation}" styleClass="slds-button slds-button_destructive"/>
                </center>
                <apex:pageBlockSection collapsible="false" columns="1" showHeader="false">                  
                    <div id="map-canvas"/>                  
                </apex:pageBlockSection>
                <center>
                    <apex:commandButton onclick="theLat.value=NewLat;theLon.value=NewLng;" value="Save Location Details" action="{!saveDispenserLocation}" styleClass="slds-button slds-button_destructive"/>
                </center>
            </apex:pageBlock>            
        </apex:form>
    </body>    
</apex:page>